--Consultas:

--Simples
SELECT DISTINCT Salario
FROM FUNCIONARIO;

--WHERE
SELECT *
FROM FUNCIONARIO
WHERE Pnome = 'João';

--AND
SELECT *
FROM FUNCIONARIO
WHERE Salario >= 30000 AND Sexo = 'M'

--OR
SELECT *
FROM FUNCIONARIO
WHERE Endereco LIKE '%São Paulo%' OR Endereco LIKE '%Curitiba%';

--NOT
SELECT *
FROM FUNCIONARIO
WHERE Endereco NOT LIKE '%São Paulo%';

--ORDER BY
SELECT *
FROM FUNCIONARIO
ORDER BY Salario DESC;

--IS NULL
SELECT *
FROM FUNCIONARIO
WHERE Cpf_supervisor IS NULL;

--IS NOT NULL
SELECT *
FROM FUNCIONARIO
WHERE Cpf_supervisor IS NOT NULL;

--SELECT TOP
SELECT TOP 3 *
FROM FUNCIONARIO
ORDER BY Salario DESC;

--SELECT MIN(Select alinhado)
SELECT MIN(Salario)
FROM FUNCIONARIO
SELECT *
FROM FUNCIONARIO
WHERE Salario = (
    SELECT MIN(Salario)
    FROM FUNCIONARIO
);

--Criando variável
DECLARE @Salario_Min DECIMAL(10,2);
SET @Salario_Min =(SELECT MIN(Salario)
                    FROM FUNCIONARIO)
SELECT *
FROM FUNCIONARIO 
WHERE Salario = @Salario_Min;

--SELECT MAX
SELECT MAX(Salario) AS Maior_Salario
FROM FUNCIONARIO;
SELECT *
FROM FUNCIONARIO
WHERE Salario = (
    SELECT MAX(Salario)
    FROM FUNCIONARIO
);

--COUNT
SELECT COUNT(*) AS Total_Funcionarios
FROM FUNCIONARIO;

--AVG
DECLARE @Salario_AVG DECIMAL(10,2);
SET @Salario_AVG =(SELECT AVG(Salario)
                    FROM FUNCIONARIO)

DECLARE @Salario_MAX DECIMAL(10,2);
SET @Salario_MAX =(SELECT MAX(Salario)
                    FROM FUNCIONARIO)

PRINT 'A diferença é: '+ CAST((@Salario_MAX - @Salario_AVG) AS VARCHAR(10))

--LIKE
SELECT *
FROM FUNCIONARIO
WHERE Datanasc LIKE '__72%';

--IN
SELECT *
FROM FUNCIONARIO
WHERE Salario IN (25000, 30000);

--(1)
SELECT Cpf
FROM FUNCIONARIO
WHERE Pnome = 'Fernando'

SELECT Pnr, Horas
FROM TRABALHA_EM
WHERE Fcpf = '33344555587'

SELECT DISTINCT *
FROM TRABALHA_EM, FUNCIONARIO
WHERE CONCAT (Pnr, Horas) IN(SELECT CONCAT (Pnr, Horas)
                    FROM TRABALHA_EM
                    WHERE Fcpf = (SELECT Cpf
                                  FROM FUNCIONARIO
                                  WHERE Pnome = 'Fernando'))
AND Fcpf <> '33344555587'
AND TRABALHA_EM.Fcpf = FUNCIONARIO.Cpf

--Mesma resposta, solução diferente(2)
SELECT  DISTINCT T1.Fcpf
FROM TRABALHA_EM AS T1
JOIN TRABALHA_EM AS T2
       ON T1.Pnr = T2.Pnr AND T1.Horas = T2.Horas
	   WHERE T2.Fcpf = '33344555587'
	   AND T1.Fcpf <> '33344555587';

--Between
SELECT Pnome
FROM FUNCIONARIO AS F
WHERE F.Salario BETWEEN 30000 AND 40000
AND F.Dnr = 5
ORDER BY F.Salario ASC;

--AS
SELECT F.Pnome AS 'Nome', F.Unome AS 'Sobrenome'
FROM FUNCIONARIO AS F;

SELECT CONCAT (F.Pnome, ' ', F.Minicial, ' ', F.Unome, ' ') AS 'Nome Completo'
FROM FUNCIONARIO AS F

SELECT CONCAT (F.Pnome, ' ', F.Minicial, ' ', F.Unome, ' ') AS 'Nome Completo'
FROM FUNCIONARIO AS F, DEPARTAMENTO AS D
WHERE F.Dnr = D.Dnumero
AND D.Dnome = 'Pesquisa';

SELECT F.Pnome AS Funcionario, G.Pnome AS Gerente
FROM FUNCIONARIO AS F
JOIN FUNCIONARIO AS G
ON F.Cpf_supervisor = G.Cpf;

INSERT INTO FUNCIONARIO(Pnome, Minicial, Unome, Cpf, Datanasc, Endereco, Sexo, Salario)
VALUES ('Carolos', 'M', 'Ferreira', '11111111111', '1980-02-15', 'Av. Medianeira, 55, Santa Maria, RS', 'M', 500),
       ('Mariana', 'L', 'Gomes', '12222222222', '1995-06-12', 'Av. Presidente Vargas, 614, Faxinal, RS', 'F', 33500),
       ('Juca', 'P', 'da Silva', '78965412365', '1990-11-10', 'Rua Venâncio Aires, 002, São Sepé, RS', 'M', 10000);


INSERT INTO DEPARTAMENTO (Dnome, Dnumero)
VALUES ('Vendas', 6),
       ('Recursos Humanos', 7),
	   ('TI', 8);

--INNER JOIN
SELECT F.*, D.*
FROM FUNCIONARIO AS F
INNER JOIN DEPARTAMENTO AS D ON F.Dnr = D.Dnumero;

SELECT F.Pnome, F.Unome, F.Endereco
FROM FUNCIONARIO AS F
INNER JOIN DEPARTAMENTO AS D ON F.Dnr = D.Dnumero
WHERE D.Dnome = 'Pesquisa';

SELECT CONCAT (F.Pnome, ' ', F.Minicial, ' ', F.Unome, ' ') AS 'Nome Completo'
FROM FUNCIONARIO AS F
JOIN TRABALHA_EM AS TE ON TE.Fcpf = F.Cpf
JOIN PROJETO AS P ON TE.Pnr = P.Projnumero
WHERE P.Projnome = 'ProdutoX';

SELECT P.Dnum, D.Dnumero, F.Unome, F.Endereco, F.Datanasc
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D ON D.Cpf_gerente = F.Cpf
JOIN PROJETO AS P ON D.Dnumero = P.Dnum
WHERE P.Projlocal = 'Mauá'

--LEFT JOIN OR RIGHT JOIN
SELECT F.*, D.*
FROM FUNCIONARIO AS F
LEFT JOIN DEPARTAMENTO AS D ON F.Dnr = D.Dnumero;

SELECT F.*, D.*
FROM FUNCIONARIO AS F
LEFT JOIN DEPARTAMENTO AS D ON F.Dnr = D.Dnumero
WHERE F.Dnr IS NULL;

SELECT D.*
FROM DEPARTAMENTO AS D
LEFT JOIN FUNCIONARIO AS F ON D.Dnumero = F.Dnr
WHERE F.Dnr IS NULL;

--FULL JOIN
SELECT F.*, D.*
FROM FUNCIONARIO AS F
FULL JOIN DEPARTAMENTO AS D ON F.Dnr = Dnumero;

--UNION(Tudo)
SELECT Dnome AS Nome
FROM DEPARTAMENTO
UNION
SELECT Projnome AS Nome
FROM PROJETO

--INTERSECT(Igualdade)
SELECT Cpf 
FROM FUNCIONARIO
INTERSECT
SELECT Cpf_gerente
FROM DEPARTAMENTO

--EXCEPT(Diferença)
SELECT Cpf 
FROM FUNCIONARIO
EXCEPT
SELECT Cpf_gerente
FROM DEPARTAMENTO

--GROUP BY
SELECT D.Dnome AS 'Dpt Nome', COUNT(F.Cpf) AS 'Nr Func.'
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D ON F.Dnr = D.Dnumero
GROUP BY D.Dnome;

SELECT D.Dnome AS 'Dpt Nome', SUM(F.Salario) AS 'S.Total'
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D ON F.Dnr = D.Dnumero
GROUP BY D.Dnome;

SELECT P.Projnome AS 'Proj. Nome', AVG(T.Horas) AS 'Média Hrs'
FROM TRABALHA_EM AS T
JOIN PROJETO AS P ON T.Pnr = P.Projnumero
GROUP BY P.Projnome;

SELECT Sexo, COUNT(*) AS 'Nr Funcionarios'
FROM FUNCIONARIO AS F
GROUP BY F.Sexo;

--HAVING
SELECT D.Dnome AS 'Dpt Nome', COUNT(F.Cpf) AS 'Nr Func.'
FROM FUNCIONARIO AS F
JOIN DEPARTAMENTO AS D ON F.Dnr = D.Dnumero
GROUP BY D.Dnome
HAVING COUNT(F.Cpf) > 3;

--EXISTS
SELECT F.*
FROM FUNCIONARIO AS F
WHERE EXISTS (SELECT 1 FROM DEPARTAMENTO AS D WHERE D.Cpf_gerente = F.Cpf);

--DECLARE
--Declarando variáveis
DECLARE @valor INT,
        @nome VARCHAR(50),
		@data DATE,
		@salario MONEY;

--SET
--Setado os valores das variáveis
SET @nome = 'Bernardo P. Freitas'
SET @data = '2004-11-01'
SET @salario = '50000'

--SELECT
--Exibindo valor
SELECT @nome AS 'Nome Completo',
       @data AS 'Nascimento',
       @salario AS 'Salario';

--PRINT
PRINT 'O meu nome é: '
      + @nome
	  + ', minha data de nascimento é: '
	  +CAST(@data AS VARCHAR(15))
	  + ' e minha idade é: '
	  +CAST((YEAR(GETDATE()) - YEAR(@data)) AS VARCHAR(4));


--SELECT para colocar valor em uma variável
--Declarado as variáveis 
DECLARE @Nome_Funcionario VARCHAR(100),
        @Salario DECIMAl(10,2),
		@Aumento DECIMAL(10,2),
		@Novo_Salario DECIMAL(10,2);

--Atribuindo um nome e um salário
SELECT @Nome_Funcionario = F.Pnome, @Salario = F.Salario
FROM FUNCIONARIO AS F
WHERE F.Pnome = 'Jennifer';

SELECT @Nome_Funcionario, @Salario;

--Conceder aumento de 10% para a Jennifer
SET @Aumento = 0.1;
SET @Novo_Salario = @Salario + (@Salario*@Aumento);

--Exibindo o novo salário
PRINT 'Funcionario(a): ' 
      + @Nome_Funcionario
	  + ' Salario: '
	  +CAST(@Salario AS VARCHAR(15))
	  +' Novo salário(+10%): '
	  + CAST(@Novo_Salario AS VARCHAR(15));

--Salavando novo salário no Banco
UPDATE FUNCIONARIO
SET Salario = @Novo_Salario
WHERE Pnome = 'Jennifer';

SELECT * FROM FUNCIONARIO WHERE Pnome = 'Jennifer';

--Recuperar o departamento de ID 5
DECLARE @Nome_Departamento VARCHAR(50);

SELECT @Nome_Departamento = D.Dnome
FROM DEPARTAMENTO AS D
WHERE d.Dnumero = 5

SELECT @Nome_Departamento AS 'Nome Departamento';

--Criando tabela provisória
DECLARE @ALUNO TABLE (
        Id INT IDENTITY PRIMARY KEY,
		Nome VARCHAR(15),
		Data_Nasc DATE,
		Curso CHAR(2)
);

--Inserir valores nesta tabela
INSERT INTO @ALUNO
VALUES('Juca da Silva', '1990-12-25', 'SI');

--Recuperar infomações desra tabela 
SELECT * 
FROM @ALUNO;

DECLARE @Idade INT;

SELECT @Idade = (YEAR (GETDATE()) - YEAR(Data_Nasc))
FROM @ALUNO
WHERE Id = 1;

PRINT 'Idade: ' + CAST(@Idade AS VARCHAR(3));


--CAST
--Usando CAST para converter o salário em uma String
SELECT 'O Funcionario' 
       + F.Pnome 
	   + ' Tem um salario de: ' 
	   + CAST(F.Salario AS VARCHAR(15)) AS 'Nome / Salário'
FROM FUNCIONARIO AS F;

--CONVERT
SELECT 'O Funcionario ' 
       + F.Pnome 
	   + ' tem um salario de: ' 
	   + CONVERT(VARCHAR(15),F.Salario) AS 'Nome / Salário'
FROM FUNCIONARIO AS F;

--Convertendo o formato da data 
SELECT 'O Funcionario ' 
       + F.Pnome 
	   + ' tem um salario de: ' 
	   + CONVERT(VARCHAR(15),F.Datanasc, 103) AS 'Nome / Data Nascimento'
FROM FUNCIONARIO AS F;

--IF/ELSE
DECLARE @idade INT,
        @nome VARCHAR(15);

--Sentando valores
SET @Idade = 19;
SET @nome = 'Juca';

If(@Idade>19)
   PRINT 'O usuário: ' + @nome + 'pode acessar o site';
ELSE
   PRINT 'O usuário: ' + @nome + 'não tem idade permitida';

--Verificando se o funcionário recebe acima da média salarial
DECLARE @Salario_Medio DECIMAL(10,2),
        @Salario_Funcionario DECIMAL(10,2),
	@Nome_Funcionario VARCHAR(50) = 'Jennifer';

SELECT @Salario_Medio = AVG(Salario)
FROM FUNCIONARIO

SELECT @Salario_Funcionario = Salario
FROM FUNCIONARIO
WHERE Pnome = 'Jennifer';

PRINT 'O salário médio: ' 
       + CONVERT(VARCHAR(10), @Salario_Medio) 
	   + ' Salário da ' 
	   + @Nome_Funcionario + ' : ' 
	   +  CONVERT(VARCHAR(10),@Salario_Funcionario)
IF (@Salario_Medio> @Salario_Funcionario)
    PRINT 'Salário abaixo da média'
ELSE
    PRINT 'Salário acima da média'

--Verificando se um banco já existe
IF NOT EXISTS (SELECT *
               FROM sys.databases
			   WHERE name = 'Biblioteca')
  BEGIN
    CREATE DATABASE Biblioteca;
  END
ELSE
    PRINT 'Já existe um banco com este nome';

--Verificando se uma tabela já existe no banco
IF NOT EXISTS (SELECT *
               FROM sys.objects
			   WHERE object_id = OBJECT_ID('FACULDADE'))
   BEGIN
   CREATE TABLE FACULDADE(
   Id INT IDENTITY PRIMARY KEY,
   Nome VARCHAR(100),
   Nota1 FLOAT,
   Nota2 FLOAT,
   Nota3 FLOAT
   );
   END
ELSE 
   PRINT 'Já existe uma tabela com esse nome'

DECLARE @Nome = 'Bernardo P. de Freitas'
        @Curso VARCHAR(2)
        @Idade INT.
SET @Data_Nasc = '2004-11-01';
SET @Curso = 'SI';

IF(MONTH(GETDATE()>MONTH(@Data_Nasc))
   SET @Idade = YEAR(GETDATE())-YEAR(@Data-Nasc)
ELSE IF (MONTH(GETDATE()) = MONTH(@Data-Nasc)
        AND DAY(GETDATE())>=DAY(@Data-Nasc));
   SET @Idade = YEAR(GETDATE())-YEAR(@Data-Nasc);
ELSE
    SET @Idade = YEAR(GETDATE())-YEAR(@Data-Nasc)-1;



